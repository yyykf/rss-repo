{
  "sources": [
    {
      "title": "Release notes from osmosfeed",
      "feedUrl": "https://github.com/osmoscraft/osmosfeed/releases.atom",
      "siteUrl": "https://github.com/osmoscraft/osmosfeed/releases",
      "articles": []
    },
    {
      "title": "阮一峰的网络日志",
      "feedUrl": "http://www.ruanyifeng.com/blog/atom.xml",
      "siteUrl": "http://www.ruanyifeng.com/blog/",
      "articles": [
        {
          "id": "http://www.ruanyifeng.com/blog/2021/08/weekly-issue-171.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。...",
          "link": "http://www.ruanyifeng.com/blog/2021/08/weekly-issue-171.html",
          "publishedOn": "2021-08-13T00:34:48.000Z",
          "wordCount": 1086,
          "title": "科技爱好者周刊（第 171 期）：云服务流量有多贵？"
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2021/08/weekly-issue-170.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。...",
          "link": "http://www.ruanyifeng.com/blog/2021/08/weekly-issue-170.html",
          "publishedOn": "2021-08-06T00:23:21.000Z",
          "wordCount": 459,
          "title": "科技爱好者周刊（第 170 期）：软件订阅制的胜利"
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2021/07/weekly-issue-169.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。...",
          "link": "http://www.ruanyifeng.com/blog/2021/07/weekly-issue-169.html",
          "publishedOn": "2021-07-30T00:30:01.000Z",
          "wordCount": 418,
          "title": "科技爱好者周刊（第 169 期）：五菱汽车的产品设计"
        },
        {
          "id": "http://www.ruanyifeng.com/blog/2021/07/weekly-issue-168.html",
          "author": null,
          "description": "这里记录每周值得分享的科技内容，周五发布。...",
          "link": "http://www.ruanyifeng.com/blog/2021/07/weekly-issue-168.html",
          "publishedOn": "2021-07-23T00:34:09.000Z",
          "wordCount": 432,
          "title": "科技爱好者周刊（第 168 期）：游戏《底特律：变人》"
        }
      ]
    },
    {
      "title": "美团技术团队",
      "feedUrl": "https://rsshub.app/meituan/tech/home",
      "siteUrl": "https://tech.meituan.com/feed/",
      "articles": [
        {
          "id": "https://tech.meituan.com/2021/08/12/kdd-2021-aitm.html",
          "author": "美团技术团队",
          "description": "论文下载：《Modeling the Sequential Dependence among Audience Multi-step Conversions with Multi-task Learning in Targeted Display Advertising》\n源代码：https://github.com/xidongbo/AITM\n\n\n\n招聘信息\n美团金融智能应用团队算法岗位持续热招中，诚招优秀算法工程师及专家，坐标北京/上海。招聘岗位包括：\n营销算法工程师/专家\n\n服务美团金融各业务场景，负责营销获客、留存促活等场景的算法设计与开发，综合机器学习与优化技术，解决金融营销问题；\n沉淀算法平台能力，提升算法应用的效率，提供客群挖掘、权益分配、素材匹配、动态创意、运筹规划、精准触达等智能解决方案；\n结合美团金融业务场景，对深度学习、强化学习、知识图谱等人工智能前沿技术探索创新，实施创新技术沉淀和落地。\n\n风控算法工程师/专家\n\n通过机器学习模型与策略的开发优化，持续提升对于金融风险行为的识别能力；\n深入理解业务，应用机器学习技术提高风控工作的自动化程度，全面提升业务效率；\n跟进人工智能的前沿技术，并在金融风控场景中探索落地。\n\nNLP算法工程师/专家\n\n基于美团金融业务场景，结合自然语言处理和机器学习相关技术，落地智能对话机器人到金融营销、风险管理、客服等多个场景；\n参与研发对话机器人的相关项目，包括但不限于语义理解、多轮对话管理等相关算法的开发和优化；\n持续跟进学术界和工业界相关技术的发展，并快速应用于项目中。\n\n欢迎感兴趣的同学发送简历至：chenzhen06@meituan.com（邮件标题注明：美团金融智能应用团队）。\n参考文献\n\n[1] Jiaqi Ma, Zhe Zhao, Xinyang Yi, Jilin Chen, Lichan Hong, an…",
          "link": "https://tech.meituan.com/2021/08/12/kdd-2021-aitm.html",
          "publishedOn": "2021-08-12T00:00:00.000Z",
          "wordCount": 298,
          "title": "KDD 2021｜美团联合多高校提出多任务学习模型，已应用于联名卡获客场景"
        },
        {
          "id": "https://tech.meituan.com/2021/08/06/spock-practice-in-meituan.html",
          "author": "美团技术团队",
          "description": "1. 背景\n​XML之父Tim Bray最近在博客里有个好玩的说法：“代码不写测试就像上了厕所不洗手……单元测试是对软件未来的一项必不可少的投资。”具体来说，单元测试有哪些收益呢？\n\n它是最容易保证代码覆盖率达到100%的测试。\n可以⼤幅降低上线时的紧张指数。\n单元测试能更快地发现问题（见下图左）。\n单元测试的性价比最高，因为错误发现的越晚，修复它的成本就越高，而且难度呈指数式增长，所以我们要尽早地进行测试（见下图右）。\n编码人员，一般也是单元测试的主要执行者，是唯一能够做到生产出无缺陷程序的人，其他任何人都无法做到这一点。\n有助于源码的优化，使之更加规范，快速反馈，可以放心进行重构。\n\n\n\n\n这张图来自微软的统计数据：Bug在单元测试阶段被发现，平均耗时3.25小时，如果漏到系统测试阶段，要花费11.5小时。这张图，旨在说明两个问题：85%的缺陷都在代码设计阶段产生，而发现Bug的阶段越靠后，耗费成本就越高，指数级别的增高。\n\n尽管单元测试有如此的收益，但在我们日常的工作中，仍然存在不少项目它们的单元测试要么是不完整要么是缺失的。常见的原因总结如下：代码逻辑过于复杂；写单元测试时耗费的时间较长；任务重、工期紧，或者干脆就不写了。\n基于以上问题，相较于传统的JUnit单元测试，今天为大家推荐一款名为Spock的测试框架。目前，美团优选物流技术团队绝大部分后端服务已经采用了Spock作为测试框架，在开发效率、可读性和维护性方面取得了不错的收益。\n不过网上Spock资料比较简单，甚至包括官网的Demo，无法解决我们项目中复杂业务场景面临的问题，通过深入学习和实践之后，本文会将一些经验分享出来，希望能够帮助大家提高开发测试的效率。\n2. Spock是什么？和JUnit、jMock有什么区别？\nSpock是一款国外优秀的测试框架，基于BDD（行为驱动开发）思想实现，功能非常强大。S…",
          "link": "https://tech.meituan.com/2021/08/06/spock-practice-in-meituan.html",
          "publishedOn": "2021-08-06T00:00:00.000Z",
          "wordCount": 1911,
          "title": "Spock单元测试框架介绍以及在美团优选的实践"
        },
        {
          "id": "https://tech.meituan.com/2021/08/05/acl-2021-meituan-07-papers.html",
          "author": "美团技术团队",
          "description": "计算语言学协会年会（ACL 2021）于2021年8月1日至6日在泰国曼谷举办（虚拟线上会议）。ACL是计算语言学和自然语言处理领域最重要的顶级国际会议，该会议由国际计算语言学协会组织，每年举办一次。据谷歌学术计算语言学刊物指标显示，ACL影响力位列第一，是CCF-A类推荐会议。今年ACL的主题是“NLP for Social Good”。据官方统计信息，本次会议共收到3350篇有效投稿，共计接收710篇主会论文（接受率为21.3%），493篇Findings论文（接受率为14.9%）。\n美团技术团队共有7篇论文（其中6篇长文，1篇短文）被ACL 2021接收，这些论文是美团在事件抽取、实体识别、意图识别、新槽位发现、无监督句子表示、语义解析、文档检索等自然语言处理任务上的一些技术沉淀和应用。\n针对于事件抽取，我们显示地利用周边实体的语义级别的论元角色信息，提出了一个双向实体级解码器（BERD）来逐步对每个实体生成论元角色序列；针对于实体识别，我们首次提出了槽间可迁移度的概念，并为此提出了一种槽间可迁移度的计算方式，通过比较目标槽与源任务槽的可迁移度，为不同的目标槽寻找相应的源任务槽作为其源槽，只基于这些源槽的训练数据来为目标槽构建槽填充模型；针对于意图识别，我们提出了一种基于监督对比学习的意图特征学习方法，通过最大化类间距离和最小化类内方差来提升意图之间的区分度；针对于新槽位发现，我们首次定义了新槽位识别（Novel Slot Detection, NSD）任务，与传统槽位识别任务不同的是，新槽位识别任务试图基于已有的域内槽位标注数据去挖掘发现真实对话数据里存在的新槽位，进而不断地完善和增强对话系统的能力。\n此外，为解决BERT原生句子表示的“坍缩”现象，我们提出了基于对比学习的句子表示迁移方法—ConSERT，通过在目标领域的无监督语料上Fine-Tune，使模型生成的…",
          "link": "https://tech.meituan.com/2021/08/05/acl-2021-meituan-07-papers.html",
          "publishedOn": "2021-08-05T00:00:00.000Z",
          "wordCount": 202,
          "title": "ACL 2021 | 一文详解美团技术团队7篇精选论文"
        },
        {
          "id": "https://tech.meituan.com/2021/07/28/app-xraysdk.html",
          "author": "美团技术团队",
          "description": "美团App的页面特点\n对于不同的用户，美团App页面的呈现方式其实多种多样，这就是所谓的“千人千面”。以美团首页的“猜你喜欢”模块为例，针对与不同的用户有单列、Tab、双列等多种不同形式。这么多不同的页面样式需求，如果要在1天内时间内完成开发、测试、上线流程，研发团队也面临着很大的挑战。所以测试工程师就需要重度依赖自动化测试来形成快速的验收机制。\n\n自动化测试实施中的技术挑战\n接下来，本文将会从页面元素无法定位、Appium元素定位的原理、AccessibilityNodeInfo和Drawable等三个维度进行阐述。\n页面元素无法定位\n\n目前，美团App客户端自动化主要依托于Appium（一个开源、跨平台的测试框架，可以用来测试原生及混合的移动端应用）来实现页面元素的定位和操作，当我们通过Appium Inspector进行页面元素审查时，能通过元素审查找到的信息只有外面的边框和下方的两个按钮，其他信息均无法识别(如上图2所示)。中央位置的图片、左上角的文本信息都无法通过现有的UI自动化方案进行定位和解析。不能定位元素，也就无法进行页面的操作和断言，这就严重影响了自动化的实施工作。\n经过进一步的调研，我们发现这些页面卡片中大量使用Drawable对象来绘制页面的信息，从而导致元素无法进行定位。为什么Drawable对象无法定位呢？下面我们一起研究一下UI自动化元素定位的原理。\nAppium元素定位的原理\n目前的UI自动化测试，使用Appium进行页面元素的定位和操作。如下图所示，AppiumServer和UiAutomator2的手机端进行通信后完成元素的操作。\n\n通过阅读Appium源码发现完成一次定位的流程如下图所示：\n\n\n首先，Appium通过调用findElement的方式进行元素定位。\n然后，调用Android提供UIDevice对象的findObject方法。…",
          "link": "https://tech.meituan.com/2021/07/28/app-xraysdk.html",
          "publishedOn": "2021-07-28T00:00:00.000Z",
          "wordCount": 802,
          "title": "美团App页面视图可测性改造实践"
        },
        {
          "id": "https://tech.meituan.com/2021/07/22/pike-2.0.html",
          "author": "美团技术团队",
          "description": "1 Pike的前世今生\n1.1 Pike 1.0的诞生背景\n2015年，美团诞生了Shark终端网络通道，为公司移动端提供长连代理加速服务。Shark通过网络接入点的全球多地部署和保持长连来提升网络请求的端到端成功率，降低端到端延时，从而提升用户体验。\nPike 1.0是基于Shark长连通道实现的应用内推送服务。由于底层传输基于Shark长连通道，使得Pike 1.0天生便具有了低延时、高可靠、防DNS劫持等优秀基因。目前Pike 1.0在美团内部的实时互动、营销推送、状态下发、配置同步等业务场景都有广泛使用。\n1.2 Pike 1.0的工作流程\n移动端SDK会在每次长连接创建成功后，使用APPID、设备唯一标识UnionID（美团唯一标识、点评唯一标识等）向服务器发起注册，在注册成功之后业务服务端就可以通过Pike 1.0服务端SDK提供的接口，主动向设备的App推送消息。服务端推送的消息通过长连接通道抵达客户端，最后通过注册的回调接口投递给业务方。整体工作流程参见下图：\n\n1.3 Pike 1.0的优势\nPike 1.0底层传输基于Shark长连通道，所以Pike 1.0在以下几个方面有不错的表现：\n\n防DNS劫持：底层通道直接使用IP直连，省去DNS解析耗时的同时也避免了被DNS劫持的风险。\n低延时：Shark长连接采用就近接入点长连接的方式，省去了传统HTTP传输需要多次建连、握手的消耗，端到端数据传输延时相比HTTP大幅缩短。\n安全性好：Shark采用自定义二进制协议进行数据传输，进行了通道级别的TLS加密，防篡改，更安全。\n更好的境外体验：Pike 1.0与Shark共享服务集群，Shark长连通道在海外多地都部署了接入点，代理加速接入，网络延时及成功率表现要优于常规请求。\n\n1.4 Pike 1.0的痛点\nPike 1.0作为Shark的衍生产品固然有其闪光…",
          "link": "https://tech.meituan.com/2021/07/22/pike-2.0.html",
          "publishedOn": "2021-07-22T00:00:00.000Z",
          "wordCount": 206,
          "title": "美团终端消息投递服务Pike的演进之路"
        }
      ]
    }
  ],
  "cliVersion": "1.11.0"
}